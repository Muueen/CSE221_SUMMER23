# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZRhVcdIIfr5cQOatRObMOeK463-HhA7Q
"""

infile = open("/content/drive/MyDrive/cse221_ass04/input6_2.txt", "r")
outfile = open("/content/drive/MyDrive/cse221_ass04/output6_2.txt", "w")

l = infile.readlines()
RC = list(map(int, l[0].split(" ")))
r = RC[0]
c = RC[1]
grid = []
for elem in range(1, len(l)):
    l[elem] = l[elem].strip("\n")
    grid.append(l[elem])
visited = []
temp = []
for i in range(r):
    for j in range(c):
        temp.append(False)
    visited.append(temp)
    temp = []
def dfs(grid, row, col, visited):
    if row < 0 or row >= len(grid) or col < 0 or col >= len(grid[0]) or grid[row][col] == '#' or visited[row][col]:
        return 0
    visited[row][col] = True
    diamonds = 0

    if grid[row][col] == 'D':
        diamonds = 1
    diamonds += dfs(grid, row - 1, col, visited)
    diamonds += dfs(grid, row + 1, col, visited)
    diamonds += dfs(grid, row, col - 1, visited)
    diamonds += dfs(grid, row, col + 1, visited)
    return diamonds

max_diamonds = 0
for row in range(r):
    for col in range(c):
        if grid[row][col] == '.' and not visited[row][col]:
            diamonds = dfs(grid, row, col, visited)
            max_diamonds = max(max_diamonds, diamonds)
print(max_diamonds)