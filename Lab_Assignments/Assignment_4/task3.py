# -*- coding: utf-8 -*-
"""task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZRhVcdIIfr5cQOatRObMOeK463-HhA7Q
"""

infile = open("/content/drive/MyDrive/cse221_ass04/input3_3.txt", "r")
outfile = open("/content/drive/MyDrive/cse221_ass04/output3_3.txt", "w")

l = infile.readlines()
nm = list(map(int, l[0].split(" ")))
n = nm[0]
for elem in l:
    elem = elem.strip("\n")
def adjL(l):
    dic = {}
    for e2 in range(1, len(l)):
        l[e2] = list(map(int, l[e2].split(" ")))
        i = l[e2][0]
        j = l[e2][1]
        if i in dic:
            dic[i].append(j)
        else:
            dic[i] = [j]
        if j not in dic:
            dic[j] = []
    return dic
g = adjL(l)

def dfs(graph, node, visited, path):
    visited[node] = True
    path.append(node)

    for neighbor in graph[node]:
        if not visited[neighbor]:
            dfs(graph, neighbor, visited, path)
visited = [False] * (n+1)
path = []
dfs(g, 1, visited, path)
line = ""
for i in range(len(path)-1):
    line += str(path[i]) + " "
line += str(path[len(path)-1])
print(line)

