# -*- coding: utf-8 -*-
"""task4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZRhVcdIIfr5cQOatRObMOeK463-HhA7Q
"""

infile = open("/content/drive/MyDrive/cse221_ass04/input4_2.txt", "r")
outfile = open("/content/drive/MyDrive/cse221_ass04/output4_2.txt", "w")

l = infile.readlines()
nm = list(map(int, l[0].split(" ")))
n = nm[0]
for elem in l:
    elem = elem.strip("\n")

def adjL(l):
    dic = {}
    for e2 in range(1, len(l)):
        l[e2] = list(map(int, l[e2].split(" ")))
        i = l[e2][0]
        j = l[e2][1]
        if i in dic:
            dic[i].append(j)
        else:
            dic[i] = [j]
        if j not in dic:
            dic[j] = []
    return dic
graph = adjL(l)

def cycle(graph, node, visited, stack):
    visited[node] = True
    stack[node] = True
    for neighbor in graph[node]:
        if visited[neighbor] == False:
            if cycle(graph, neighbor, visited, stack):
                return True
        elif stack[neighbor]:
            return True

    stack[node] = False
    return False

visited = [False] * (n + 1)
stack = [False] * (n + 1)

f = 0
for node in range(1, n + 1):
    if not visited[node] and cycle(graph, node, visited, stack):
        f = 1
        break
if f ==  1:
    line = "YES"
else:
    line = "NO"
outfile.writelines(line)